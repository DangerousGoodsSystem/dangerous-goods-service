# Generated by Django 5.0.9 on 2025-04-30 16:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1, unique=True)),
                ('label', models.ImageField(blank=True, null=True, upload_to='labels/class/')),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.classification',
            },
        ),
        migrations.CreateModel(
            name='EmergencySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.emergencyschedule',
            },
        ),
        migrations.CreateModel(
            name='ExceptedQuantities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.exceptedquantities',
            },
        ),
        migrations.CreateModel(
            name='IBCInstructions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.ibcinstructions',
            },
        ),
        migrations.CreateModel(
            name='IBCProvisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.ibcprovisions',
            },
        ),
        migrations.CreateModel(
            name='PackingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.packinggroup',
            },
        ),
        migrations.CreateModel(
            name='PackingInstructions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'goods.packinginstructions',
            },
        ),
        migrations.CreateModel(
            name='PackingProvisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.packingprovisions',
            },
        ),
        migrations.CreateModel(
            name='Segregation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.segregation',
            },
        ),
        migrations.CreateModel(
            name='SpecialProvisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.specialprovisions',
            },
        ),
        migrations.CreateModel(
            name='StowageHandling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.stowagehandling',
            },
        ),
        migrations.CreateModel(
            name='TankInstructions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.tankinstructions',
            },
        ),
        migrations.CreateModel(
            name='TankProvisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.tankprovisions',
            },
        ),
        migrations.CreateModel(
            name='UNCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'goods.un_code',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1)),
                ('label', models.ImageField(blank=True, null=True, upload_to='labels/division/')),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='goods.classification')),
            ],
            options={
                'db_table': 'goods.division',
            },
        ),
        migrations.CreateModel(
            name='CompatibilityGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('is_activate', models.BooleanField(default=True)),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_groups', to='goods.classification')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_groups', to='goods.division')),
            ],
            options={
                'db_table': 'goods.compatibilitygroup',
            },
        ),
        migrations.CreateModel(
            name='ClassDivisionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activate', models.BooleanField(default=True)),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_divisions', to='goods.classification')),
                ('compatibility_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_divisions', to='goods.compatibilitygroup')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_divisions', to='goods.division')),
            ],
            options={
                'db_table': 'goods.class_division_group',
            },
        ),
        migrations.CreateModel(
            name='SegregationBar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('segregation_level', models.SmallIntegerField(default=0)),
                ('is_activate', models.BooleanField(default=True)),
                ('from_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_class', to='goods.classdivisiongroup')),
                ('to_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_class', to='goods.classdivisiongroup')),
            ],
            options={
                'db_table': 'goods.segregationbar',
            },
        ),
        migrations.CreateModel(
            name='DangerousGoods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proper_shipping_name', models.JSONField(blank=True, default=dict, null=True)),
                ('limited_quantities', models.CharField(blank=True, max_length=100, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('is_activate', models.BooleanField(default=True)),
                ('class_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dangerousgoods', to='goods.classdivisiongroup')),
                ('subsidiary_hazards', models.ManyToManyField(blank=True, related_name='dangerousgoods_subsidiaryhazards', to='goods.classdivisiongroup')),
                ('emergency_schedule', models.ManyToManyField(blank=True, related_name='dangerousgoods_emergencyschedule', to='goods.emergencyschedule')),
                ('excepted_quantities', models.ManyToManyField(blank=True, related_name='dangerousgoods_exceptedquantities', to='goods.exceptedquantities')),
                ('ibc_instructions', models.ManyToManyField(blank=True, related_name='dangerousgoods_ibcinstructions', to='goods.ibcinstructions')),
                ('ibc_provisions', models.ManyToManyField(blank=True, related_name='dangerousgoods_ibcprovisions', to='goods.ibcprovisions')),
                ('packing_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dangerousgoods', to='goods.packinggroup')),
                ('packing_instructions', models.ManyToManyField(blank=True, related_name='dangerousgoods_packinginstructions', to='goods.packinginstructions')),
                ('packing_provisions', models.ManyToManyField(blank=True, related_name='dangerousgoods_packingprovisions', to='goods.packingprovisions')),
                ('segregation', models.ManyToManyField(blank=True, related_name='dangerousgoods_segregation', to='goods.segregation')),
                ('special_provisions', models.ManyToManyField(blank=True, related_name='dangerousgoods_specialprovisions', to='goods.specialprovisions')),
                ('stowage_handling', models.ManyToManyField(blank=True, related_name='dangerousgoods_stowagehandling', to='goods.stowagehandling')),
                ('tank_instructions', models.ManyToManyField(blank=True, related_name='dangerousgoods_tankinstructions', to='goods.tankinstructions')),
                ('tank_provisions', models.ManyToManyField(blank=True, related_name='dangerousgoods_tankprovisions', to='goods.tankprovisions')),
                ('un_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dangerousgoods', to='goods.uncode')),
            ],
            options={
                'db_table': 'goods.dangerousgoods',
            },
        ),
        migrations.AddConstraint(
            model_name='division',
            constraint=models.UniqueConstraint(fields=('classification', 'code'), name='unique_class_code'),
        ),
        migrations.AddConstraint(
            model_name='compatibilitygroup',
            constraint=models.UniqueConstraint(fields=('classification', 'division', 'code'), name='unique_class_division_code'),
        ),
        migrations.AddConstraint(
            model_name='classdivisiongroup',
            constraint=models.UniqueConstraint(fields=('classification', 'division', 'compatibility_group'), name='unique_class_division_group'),
        ),
    ]
