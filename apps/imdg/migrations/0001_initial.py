# Generated by Django 5.0.9 on 2025-06-08 07:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IMDGAmendment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('is_effective', models.BooleanField(default=False)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'imdg.imdgamendment',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='IBCProvisions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/ibcprovisions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ibc_provisions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.ibcprovisions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='IBCInstructions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/ibcinstructions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ibc_instructions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.ibcinstructions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='ExceptedQuantities',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/exceptedquantities/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='excepted_quantities', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.exceptedquantities',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencySchedules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/emergencyschedules/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_schedules', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.emergencyschedules',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='DangerousGoods',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('un_code', models.CharField(blank=True, max_length=4, null=True)),
                ('un_description', models.TextField(blank=True, null=True)),
                ('proper_shipping_name', models.TextField(blank=True, null=True)),
                ('class_division_code', models.CharField(blank=True, max_length=10, null=True)),
                ('subsidiary_hazards_codes', models.JSONField(blank=True, null=True)),
                ('packing_group_code', models.CharField(blank=True, max_length=10, null=True)),
                ('special_provisions_codes', models.JSONField(blank=True, null=True)),
                ('limited_quantities', models.TextField(blank=True, null=True)),
                ('excepted_quantities_codes', models.JSONField(blank=True, null=True)),
                ('packing_instructions_codes', models.JSONField(blank=True, null=True)),
                ('packing_provisions_codes', models.JSONField(blank=True, null=True)),
                ('ibc_instructions_codes', models.JSONField(blank=True, null=True)),
                ('ibc_provisions_codes', models.JSONField(blank=True, null=True)),
                ('tank_instructions_codes', models.JSONField(blank=True, null=True)),
                ('tank_provisions_codes', models.JSONField(blank=True, null=True)),
                ('emergency_schedules_codes', models.JSONField(blank=True, null=True)),
                ('stowage_handling_codes', models.JSONField(blank=True, null=True)),
                ('segregation_codes', models.JSONField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dangerousgoods', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.dangerousgoods',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='ClassDivision',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('label', models.ImageField(blank=True, null=True, upload_to='pictures/imdg/classdivisions/')),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/classdivisions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classdivisions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.classdivision',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='PackingGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/packinggroups/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packing_groups', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.packinggroup',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='PackingInstructions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/packinginstructions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packing_instructions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.packinginstructions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='PackingProvisions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/packingprovisions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packing_provisions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.packingprovisions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='Segregation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/segregations/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segregations', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.segregation',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='SegregationRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement', models.CharField(choices=[('1', '1 - Away from'), ('2', '2 - Separated from'), ('3', '3 - Separated by a complete compartment or hold from'), ('4', '4 - Separated longitudinally by an intervening complete compartment or hold from'), ('X', 'X - No general segregation provisions apply. Check DGL.'), ('*', '* - See compatibility group requirements for explosives.')], default='X', max_length=1)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('fromclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_class', to='imdg.classdivision')),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segregation_bars', to='imdg.imdgamendment')),
                ('toclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_class', to='imdg.classdivision')),
            ],
            options={
                'db_table': 'imdg.segregationbar',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='SpecialProvisions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/specialprovisions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_provisions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.specialprovisions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='StowageHandling',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/stowagehandling/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stowage_handlings', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.stowagehandling',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='TankInstructions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/tankinstructions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tank_instructions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.tankinstructions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='TankProvisions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/imdg/tankprovisions/')),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tank_provisions', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.tankprovisions',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.CreateModel(
            name='UNCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=4)),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_at', models.DateTimeField(auto_now_add=True)),
                ('imdgamendment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uncodes', to='imdg.imdgamendment')),
            ],
            options={
                'db_table': 'imdg.uncode',
                'ordering': ['-upload_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='ibcprovisions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_ibcprovisioncode'),
        ),
        migrations.AddConstraint(
            model_name='ibcinstructions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_ibcinstructioncode'),
        ),
        migrations.AddConstraint(
            model_name='exceptedquantities',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_exceptedquantitiecode'),
        ),
        migrations.AddConstraint(
            model_name='emergencyschedules',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_emergencyschedulecode'),
        ),
        migrations.AddConstraint(
            model_name='classdivision',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_classdivisioncode'),
        ),
        migrations.AddConstraint(
            model_name='packinggroup',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_packinggroupcode'),
        ),
        migrations.AddConstraint(
            model_name='packinginstructions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_packinginstructioncode'),
        ),
        migrations.AddConstraint(
            model_name='packingprovisions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_packingprovisioncode'),
        ),
        migrations.AddConstraint(
            model_name='segregation',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_segregationcode'),
        ),
        migrations.AddConstraint(
            model_name='segregationrule',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'fromclass', 'toclass'), name='unique_imdgamendment_segregationbar'),
        ),
        migrations.AddConstraint(
            model_name='specialprovisions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_specialprovisioncode'),
        ),
        migrations.AddConstraint(
            model_name='stowagehandling',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_stowagehandlingcode'),
        ),
        migrations.AddConstraint(
            model_name='tankinstructions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_tankinstructioncode'),
        ),
        migrations.AddConstraint(
            model_name='tankprovisions',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_tankprovisioncode'),
        ),
        migrations.AddConstraint(
            model_name='uncode',
            constraint=models.UniqueConstraint(fields=('imdgamendment', 'code'), name='unique_imdgamendment_uncode'),
        ),
    ]
