services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/dangerous_goods
      - staticfiles_data:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py migrate &&
            uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --workers 4"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/dangerous_goods
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bash", "-c", "PYTHONPATH=/app/dangerous_goods celery -A config.celery worker --loglevel=info"]

  redis:
    image: redis:7.4
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16.9
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  nginx:
    image: nginx:1.28.0
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web

volumes:
  staticfiles_data:
    name: dangerous_goods_staticfiles_data
  redis_data:
    name: dangerous_goods_redis_data
  postgres_data:
    name: dangerous_goods_postgres_data