services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/dangerous_goods
      - staticfiles_data:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
    depends_on:
      db:
        condition: service_healthy 
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 config.wsgi:application $([ \"$DEBUG\" = \"True\" ] && echo '--reload')"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/dangerous_goods
    env_file:
      - .env
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bash", "-c", "PYTHONPATH=/app/dangerous_goods celery -A config.celery worker --loglevel=info"]

  redis:
    image: redis:latest
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: mysql:8.0.36
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  staticfiles_data:
    name: dangerous_goods_staticfiles_data
  redis_data:
    name: dangerous_goods_redis_data
  mysql_data:
    name: dangerous_goods_mysql_data